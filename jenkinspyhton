pipeline {
    agent any

    environment {
        SONARQUBE_ENV = 'SonarQube'             // Le nom du serveur Sonar dans Jenkins
        SCANNER_NAME = 'SonarQube Scanner'       // Le nom du scanner Sonar install√© dans Jenkins
        PROJECT_KEY = 'alpinehelloworld'         // Nom du projet sur SonarQube
    }

    stages {

        stage('Checkout Code') {
            steps {
                echo 'üîÑ R√©cup√©ration du code source...'
                checkout scm
            }
        }

        stage('Install Python Dependencies') {
            steps {
                echo 'üì¶ Installation des d√©pendances Python...'
                sh '''
                    if command -v pip3 >/dev/null 2>&1; then
                        PIP=pip3
                    else
                        PIP=pip
                    fi

                    if [ -f webapp/requirements.txt ]; then
                        $PIP install -r webapp/requirements.txt
                    else
                        echo "Pas de fichier requirements.txt trouv√© dans webapp"
                    fi
                '''
            }
        }

        stage('Analyse SonarQube') {
            steps {
                echo 'üîç Lancement de l‚Äôanalyse SonarQube...'
                script {
                    def scannerHome = tool "${SCANNER_NAME}"
                    withSonarQubeEnv("${SONARQUBE_ENV}") {
                        withCredentials([string(credentialsId: 'alpinehelloworld', variable: 'SONAR_TOKEN')]) {
                            sh """
                                ${scannerHome}/bin/sonar-scanner \
                                  -Dsonar.projectKey=${PROJECT_KEY} \
                                  -Dsonar.sources=. \
                                  -Dsonar.python.version=3.11 \
                                  -Dsonar.login=${SONAR_TOKEN}
                            """
                        }
                    }
                }
            }
        }

        stage('Build Python Project') {
            steps {
                echo 'üîß Compilation (optionnelle)...'
                sh '''
                    if [ -f setup.py ]; then
                        python3 setup.py install
                    else
                        echo "Pas de setup.py, √©tape ignor√©e"
                    fi
                '''
            }
        }
    }

    post {
