pipeline {
    agent {
        docker {
            image 'python:3.11' // Image Docker avec Python pr√©install√©
        }
    }

    environment {
        SONARQUBE = 'SonarQube' // Nom de ton serveur SonarQube configur√© dans Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'üì• R√©cup√©ration du code source...'
                checkout scm
            }
        }

        stage('Check Python and pip') {
            steps {
                echo 'üîç V√©rification de Python et pip...'
                sh 'python --version'
                sh 'pip --version'
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'üì¶ Installation des d√©pendances Python...'
                sh '''
                    if [ -f requirements.txt ]; then
                        pip install -r requirements.txt
                    else
                        echo "Pas de fichier requirements.txt trouv√©, on passe cette √©tape."
                    fi
                '''
            }
        }

        stage('Run Script') {
            steps {
                echo 'üöÄ Ex√©cution de ton script Python...'
                sh 'python ton_script.py'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'üîé Analyse du code avec SonarQube...'
                script {
                    def scannerHome = tool 'SonarQube Scanner' // Configur√© dans Jenkins > Global Tool Configuration
                    withSonarQubeEnv("${SONARQUBE}") {
                        sh """
                            ${scannerHome}/bin/sonar-scanner \
                                -Dsonar.projectKey=alpinehelloworld \
                                -Dsonar.sources=. \
                                -Dsonar.python.version=3.11
                        """
                    }
                }
            }
        }

        stage('Build') {
            steps {
                echo 'üîß √âtape de build (optionnelle si ton projet n\'a pas de setup.py)...'
                sh '''
                    if [ -f setup.py ]; then
                        python setup.py install
                    else
                        echo "Pas de setup.py trouv√©, build ignor√©."
                    fi
                '''
            }
        }
    }

    post {
        success {
            echo '‚úÖ Build et analyse SonarQube termin√©s avec succ√®s.'
        }
        failure {
            echo '‚ùå Une √©tape du pipeline a √©chou√©.'
        }
    }
}
