pipeline {
    agent any

    environment {
        SONARQUBE_ENV = 'SonarQube'
        SCANNER_NAME = 'SonarQube Scanner'
        PROJECT_KEY = 'alpinehelloworld'
    }

    stages {

        stage('Checkout Code') {
            steps {
                echo 'üîÑ R√©cup√©ration du code source...'
                checkout scm
            }
        }

        stage('Install Python Dependencies') {
            steps {
                echo 'üì¶ Installation des d√©pendances Python...'
                sh '''
                    echo "üì• V√©rification ou installation de Python3 et pip3..."

                    # Pour Debian/Ubuntu - si besoin adapte selon l'image utilis√©e
                    if ! command -v python3 >/dev/null 2>&1; then
                        echo "‚ö†Ô∏è Python3 n'est pas install√©. Tentative d'installation..."
                        apt-get update && apt-get install -y python3
                    fi

                    if ! command -v pip3 >/dev/null 2>&1; then
                        echo "‚ö†Ô∏è pip3 n'est pas install√©. Tentative d'installation..."
                        apt-get update && apt-get install -y python3-pip
                    fi

                    if command -v pip3 >/dev/null 2>&1; then
                        PIP=pip3
                    else
                        echo "‚ùå pip3 introuvable apr√®s installation. Abandon."
                        exit 1
                    fi

                    if [ -f webapp/requirements.txt ]; then
                        echo "üìÇ Installation des d√©pendances depuis requirements.txt..."
                        $PIP install -r webapp/requirements.txt
                    else
                        echo "‚ö†Ô∏è Fichier requirements.txt introuvable dans le dossier webapp."
                    fi
                '''
            }
        }

        stage('Analyse SonarQube') {
            steps {
                echo 'üîç Lancement de l‚Äôanalyse SonarQube...'
                script {
                    def scannerHome = tool "${SCANNER_NAME}"
                    withSonarQubeEnv("${SONARQUBE_ENV}") {
                        withCredentials([string(credentialsId: 'alpinehelloworld', variable: 'SONAR_TOKEN')]) {
                            sh """
                                ${scannerHome}/bin/sonar-scanner \
                                  -Dsonar.projectKey=${PROJECT_KEY} \
                                  -Dsonar.sources=. \
                                  -Dsonar.python.version=3.11 \
                                  -Dsonar.login=${SONAR_TOKEN}
                            """
                        }
                    }
                }
            }
        }

        stage('Build Python Project') {
            steps {
                echo 'üîß Compilation (optionnelle)...'
                sh '''
                    if [ -f setup.py ]; then
                        python3 setup.py install
                    else
                        echo "‚ö†Ô∏è Pas de setup.py, √©tape ignor√©e."
                    fi
                '''
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline termin√©e avec succ√®s.'
        }
        failure {
            echo '‚ùå √âchec de la pipeline.'
        }
    }
}
